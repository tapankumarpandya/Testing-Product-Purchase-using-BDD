<?xml version="1.0" encoding="UTF-8"?><testrun name="TestRunner" project="FirstBDDProject" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="tapanhpandya.Runner.TestRunner" time="0.001">
    <testcase name="initializationError" classname="tapanhpandya.Runner.TestRunner" time="0.001">
      <error>io.cucumber.core.gherkin.FeatureParserException: Failed to parse resource at: file:///D:/BDDFrameworkProjects/FirstBDDProject/src/main/java/tapanhpandya/Features/purchase.feature
(19:7): inconsistent cell count within the table&#13;
	at io.cucumber.core.gherkin.messages.GherkinMessagesFeatureParser.parse(GherkinMessagesFeatureParser.java:56)&#13;
	at io.cucumber.core.feature.FeatureParser.parseResource(FeatureParser.java:46)&#13;
	at java.base/java.util.function.BiFunction.lambda$andThen$0(BiFunction.java:70)&#13;
	at io.cucumber.core.resource.ResourceScanner.lambda$processResource$1(ResourceScanner.java:79)&#13;
	at io.cucumber.core.resource.PathScanner$ResourceFileVisitor.visitFile(PathScanner.java:75)&#13;
	at io.cucumber.core.resource.PathScanner$ResourceFileVisitor.visitFile(PathScanner.java:60)&#13;
	at java.base/java.nio.file.Files.walkFileTree(Files.java:2812)&#13;
	at io.cucumber.core.resource.PathScanner.findResourcesForPath(PathScanner.java:53)&#13;
	at io.cucumber.core.resource.PathScanner.findResourcesForUri(PathScanner.java:31)&#13;
	at io.cucumber.core.resource.ResourceScanner.findResourcesForUri(ResourceScanner.java:61)&#13;
	at io.cucumber.core.resource.ResourceScanner.scanForResourcesUri(ResourceScanner.java:134)&#13;
	at io.cucumber.core.runtime.FeaturePathFeatureSupplier.loadFeatures(FeaturePathFeatureSupplier.java:62)&#13;
	at io.cucumber.core.runtime.FeaturePathFeatureSupplier.get(FeaturePathFeatureSupplier.java:45)&#13;
	at io.cucumber.junit.Cucumber.&lt;init&gt;(Cucumber.java:156)&#13;
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)&#13;
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)&#13;
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)&#13;
	at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)&#13;
	at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#13;
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#13;
	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:90)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:76)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:49)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:513)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
